---
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import Pagination from "@/layouts/components/Pagination.astro";
import Post from "@/layouts/components/Post.astro";
import taxonomyFilter from "@/lib/utils/taxonomyFilter";
import { getSinglePage } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { getTaxonomy } from "@/lib/taxonomyParser.astro";
import type { GetStaticPathsOptions } from "astro";

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const { blog_folder, pagination } = config.settings;
  const allPosts = await getSinglePage(blog_folder as any);
  const sortByDatePosts = sortByDate(allPosts);

  const categories = await getTaxonomy(blog_folder, "categories");
  return categories.map((category) => {
    const filterByTags = taxonomyFilter(
      sortByDatePosts,
      "categories",
      category
    );
    return paginate(filterByTags, {
      params: { category: category || "" },
      pageSize: pagination,
    });
  }).flat();
};

const { page } = Astro.props;
const { category } = Astro.params;
---

<Base title={category}>
  <!-- Blogs -->
  <div class="section">
    <div class="container">
      <div class="row gy-5 gx-4">
        <h1 class="h2 mb-8">
          Posts related to <span class="text-primary">{category}</span> category
        </h1>
        {page.data.map((post: any) => <Post post={post} />)}
        <Pagination
          section={`categories/${category}`}
          currentPage={page.currentPage}
          totalPages={page.lastPage}
        />
      </div>
    </div>
  </div>
  <!-- ./End Blogs -->
</Base>
