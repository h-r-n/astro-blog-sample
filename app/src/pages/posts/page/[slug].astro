---
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import Pagination from "@/layouts/components/Pagination.astro";
import Post from "@/layouts/components/Post.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";

export async function getStaticPaths() {
  const posts = await getSinglePage(config.settings.blog_folder as any);
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}
const { slug } = Astro.params;
const posts = await getSinglePage(config.settings.blog_folder as any);
const sortedPosts = sortByDate(posts);
const totalPages = Math.ceil(posts.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);
---

<Base>
  <!-- Blogs -->
  <div class="section">
    <div class="container">
      <div class="row gy-5 gx-4">
        <h1 class="h2 mb-8">Latest Posts</h1>
        {currentPosts.map((post, i) => <Post post={post} />)}
        <Pagination section={"posts"} totalPages={totalPages} currentPage={currentPage} />
      </div>
    </div>
  </div>
  <!-- ./End Blogs -->
</Base>
